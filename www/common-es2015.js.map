{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/cubic-bezier-2812fda3.js","./node_modules/@ionic/core/dist/esm/framework-delegate-c2e2e1f4.js","./node_modules/@ionic/core/dist/esm/haptic-c8f1473e.js","./node_modules/@ionic/core/dist/esm/index-3476b023.js","./node_modules/@ionic/core/dist/esm/index-6826f2f6.js","./node_modules/@ionic/core/dist/esm/theme-18cbe2cc.js","./node_modules/@ionic/core/dist/esm/watch-options-2af96011.js","./src/app/modules/issue/issue.page.html","./src/app/modules/issue/issue.page.scss","./src/app/modules/issue/issue.page.ts","./src/app/services/address.service.ts","./src/app/services/chat.service.ts","./src/app/services/order.service.ts","./src/app/services/store.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEoD;;;;;;;;;;;;;AC5FpD;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiH;;;;;;;;;;;;;AC3CjH;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mEAAmE,mBAAmB;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,mCAAmC;AAC3E;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gCAAgC;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,QAAQ;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEkC;;;;;;;;;;;;;AC/GlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAC+F;;AAEnJ,qCAAqC,2OAAsC;AAC3E,oCAAoC,uOAAqC;AACzE;AACA;AACA,QAAQ,2DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uMAA6B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,wDAAoB;AAC7C,0BAA0B,wDAAoB;AAC9C;AACA;AACA,0BAA0B,wDAAmB;AAC7C,yBAAyB,wDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEuG;;;;;;;;;;;;;ACnNvG;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACzCrF;AAAA;AAAA;AAAA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,2BAA2B;AAClD;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEwD;;;;;;;;;;;;AC9BxD,kIAAkI,OAAO,iYAAiY,iHAAiH,UAAU,mIAAmI,QAAQ,4G;;;;;;;;;;;ACAhxB,+DAA+D,+I;;;;;;;;;;;;;;;;;;ACAb;AACU;AAQ5D,IAAa,SAAS,GAAtB,MAAa,SAAS;IAKlB,YACY,eAAgC,EAChC,MAAiB;QADjB,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAW;QAJtB,QAAG,GAAG,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","file":"common-es2015.js","sourcesContent":["/**\r\n * Based on:\r\n * https://stackoverflow.com/questions/7348009/y-coordinate-for-a-given-x-cubic-bezier\r\n * https://math.stackexchange.com/questions/26846/is-there-an-explicit-form-for-cubic-b%C3%A9zier-curves\r\n * TODO: Reduce rounding error\r\n */\r\nclass Point {\r\n    constructor(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n/**\r\n * Given a cubic-bezier curve, get the x value (time) given\r\n * the y value (progression).\r\n * Ex: cubic-bezier(0.32, 0.72, 0, 1);\r\n * P0: (0, 0)\r\n * P1: (0.32, 0.72)\r\n * P2: (0, 1)\r\n * P3: (1, 1)\r\n *\r\n * If you give a cubic bezier curve that never reaches the\r\n * provided progression, this function will return NaN.\r\n */\r\nconst getTimeGivenProgression = (p0, p1, p2, p3, progression) => {\r\n    const tValues = solveCubicBezier(p0.y, p1.y, p2.y, p3.y, progression);\r\n    return solveCubicParametricEquation(p0.x, p1.x, p2.x, p3.x, tValues[0]); // TODO: Add better strategy for dealing with multiple solutions\r\n};\r\n/**\r\n * Solve a cubic equation in one dimension (time)\r\n */\r\nconst solveCubicParametricEquation = (p0, p1, p2, p3, t) => {\r\n    const partA = (3 * p1) * Math.pow(t - 1, 2);\r\n    const partB = (-3 * p2 * t) + (3 * p2) + (p3 * t);\r\n    const partC = p0 * Math.pow(t - 1, 3);\r\n    return t * (partA + (t * partB)) - partC;\r\n};\r\n/**\r\n * Find the `t` value for a cubic bezier using Cardano's formula\r\n */\r\nconst solveCubicBezier = (p0, p1, p2, p3, refPoint) => {\r\n    p0 -= refPoint;\r\n    p1 -= refPoint;\r\n    p2 -= refPoint;\r\n    p3 -= refPoint;\r\n    const roots = solveCubicEquation(p3 - 3 * p2 + 3 * p1 - p0, 3 * p2 - 6 * p1 + 3 * p0, 3 * p1 - 3 * p0, p0);\r\n    return roots.filter(root => root >= 0 && root <= 1);\r\n};\r\nconst solveQuadraticEquation = (a, b, c) => {\r\n    const discriminant = b * b - 4 * a * c;\r\n    if (discriminant < 0) {\r\n        return [];\r\n    }\r\n    else {\r\n        return [\r\n            (-b + Math.sqrt(discriminant)) / (2 * a),\r\n            (-b - Math.sqrt(discriminant)) / (2 * a)\r\n        ];\r\n    }\r\n};\r\nconst solveCubicEquation = (a, b, c, d) => {\r\n    if (a === 0) {\r\n        return solveQuadraticEquation(b, c, d);\r\n    }\r\n    b /= a;\r\n    c /= a;\r\n    d /= a;\r\n    const p = (3 * c - b * b) / 3;\r\n    const q = (2 * b * b * b - 9 * b * c + 27 * d) / 27;\r\n    if (p === 0) {\r\n        return [Math.pow(-q, 1 / 3)];\r\n    }\r\n    else if (q === 0) {\r\n        return [Math.sqrt(-p), -Math.sqrt(-p)];\r\n    }\r\n    const discriminant = Math.pow(q / 2, 2) + Math.pow(p / 3, 3);\r\n    if (discriminant === 0) {\r\n        return [Math.pow(q / 2, 1 / 2) - b / 3];\r\n    }\r\n    else if (discriminant > 0) {\r\n        return [Math.pow(-(q / 2) + Math.sqrt(discriminant), 1 / 3) - Math.pow((q / 2) + Math.sqrt(discriminant), 1 / 3) - b / 3];\r\n    }\r\n    const r = Math.sqrt(Math.pow(-(p / 3), 3));\r\n    const phi = Math.acos(-(q / (2 * Math.sqrt(Math.pow(-(p / 3), 3)))));\r\n    const s = 2 * Math.pow(r, 1 / 3);\r\n    return [\r\n        s * Math.cos(phi / 3) - b / 3,\r\n        s * Math.cos((phi + 2 * Math.PI) / 3) - b / 3,\r\n        s * Math.cos((phi + 4 * Math.PI) / 3) - b / 3\r\n    ];\r\n};\n\nexport { Point as P, getTimeGivenProgression as g };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\r\n    if (delegate) {\r\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\r\n    }\r\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\r\n        throw new Error('framework delegate is missing');\r\n    }\r\n    const el = (typeof component === 'string')\r\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\r\n        : component;\r\n    if (cssClasses) {\r\n        cssClasses.forEach(c => el.classList.add(c));\r\n    }\r\n    if (componentProps) {\r\n        Object.assign(el, componentProps);\r\n    }\r\n    container.appendChild(el);\r\n    if (el.componentOnReady) {\r\n        await el.componentOnReady();\r\n    }\r\n    return el;\r\n};\r\nconst detachComponent = (delegate, element) => {\r\n    if (element) {\r\n        if (delegate) {\r\n            const container = element.parentElement;\r\n            return delegate.removeViewFromDom(container, element);\r\n        }\r\n        element.remove();\r\n    }\r\n    return Promise.resolve();\r\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\r\n * Check to see if the Haptic Plugin is available\r\n * @return Returns `true` or false if the plugin is available\r\n */\r\n/**\r\n * Trigger a selection changed haptic event. Good for one-time events\r\n * (not for gestures)\r\n */\r\nconst hapticSelection = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.selection();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a gesture for a selection change is starting.\r\n */\r\nconst hapticSelectionStart = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionStart();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine that a selection changed during a gesture.\r\n */\r\nconst hapticSelectionChanged = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionChanged();\r\n    }\r\n};\r\n/**\r\n * Tell the haptic engine we are done with a gesture. This needs to be\r\n * called lest resources are not properly recycled.\r\n */\r\nconst hapticSelectionEnd = () => {\r\n    const engine = window.TapticEngine;\r\n    if (engine) {\r\n        engine.gestureSelectionEnd();\r\n    }\r\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\r\n * Does a simple sanitization of all elements\r\n * in an untrusted string\r\n */\r\nconst sanitizeDOMString = (untrustedString) => {\r\n    try {\r\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\r\n            return untrustedString;\r\n        }\r\n        /**\r\n         * Create a document fragment\r\n         * separate from the main DOM,\r\n         * create a div to do our work in\r\n         */\r\n        const documentFragment = document.createDocumentFragment();\r\n        const workingDiv = document.createElement('div');\r\n        documentFragment.appendChild(workingDiv);\r\n        workingDiv.innerHTML = untrustedString;\r\n        /**\r\n         * Remove any elements\r\n         * that are blocked\r\n         */\r\n        blockedTags.forEach(blockedTag => {\r\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\r\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\r\n                const element = getElementsToRemove[elementIndex];\r\n                if (element.parentNode) {\r\n                    element.parentNode.removeChild(element);\r\n                }\r\n                else {\r\n                    documentFragment.removeChild(element);\r\n                }\r\n                /**\r\n                 * We still need to sanitize\r\n                 * the children of this element\r\n                 * as they are left behind\r\n                 */\r\n                const childElements = getElementChildren(element);\r\n                /* tslint:disable-next-line */\r\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\r\n                    sanitizeElement(childElements[childIndex]);\r\n                }\r\n            }\r\n        });\r\n        /**\r\n         * Go through remaining elements and remove\r\n         * non-allowed attribs\r\n         */\r\n        // IE does not support .children on document fragments, only .childNodes\r\n        const dfChildren = getElementChildren(documentFragment);\r\n        /* tslint:disable-next-line */\r\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\r\n            sanitizeElement(dfChildren[childIndex]);\r\n        }\r\n        // Append document fragment to div\r\n        const fragmentDiv = document.createElement('div');\r\n        fragmentDiv.appendChild(documentFragment);\r\n        // First child is always the div we did our work in\r\n        const getInnerDiv = fragmentDiv.querySelector('div');\r\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n        return '';\r\n    }\r\n};\r\n/**\r\n * Clean up current element based on allowed attributes\r\n * and then recursively dig down into any child elements to\r\n * clean those up as well\r\n */\r\nconst sanitizeElement = (element) => {\r\n    // IE uses childNodes, so ignore nodes that are not elements\r\n    if (element.nodeType && element.nodeType !== 1) {\r\n        return;\r\n    }\r\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\r\n        const attribute = element.attributes.item(i);\r\n        const attributeName = attribute.name;\r\n        // remove non-allowed attribs\r\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\r\n            element.removeAttribute(attributeName);\r\n            continue;\r\n        }\r\n        // clean up any allowed attribs\r\n        // that attempt to do any JS funny-business\r\n        const attributeValue = attribute.value;\r\n        /* tslint:disable-next-line */\r\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\r\n            element.removeAttribute(attributeName);\r\n        }\r\n    }\r\n    /**\r\n     * Sanitize any nested children\r\n     */\r\n    const childElements = getElementChildren(element);\r\n    /* tslint:disable-next-line */\r\n    for (let i = 0; i < childElements.length; i++) {\r\n        sanitizeElement(childElements[i]);\r\n    }\r\n};\r\n/**\r\n * IE doesn't always support .children\r\n * so we revert to .childNodes instead\r\n */\r\nconst getElementChildren = (el) => {\r\n    return (el.children != null) ? el.children : el.childNodes;\r\n};\r\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\r\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","import { w as writeTask } from './core-ca0488fc.js';\nimport { b as LIFECYCLE_WILL_LEAVE, L as LIFECYCLE_WILL_ENTER, a as LIFECYCLE_DID_ENTER, c as LIFECYCLE_DID_LEAVE } from './constants-3c3e1099.js';\n\nconst iosTransitionAnimation = () => import('./ios.transition-071bd421.js');\r\nconst mdTransitionAnimation = () => import('./md.transition-15a81b08.js');\r\nconst transition = (opts) => {\r\n    return new Promise((resolve, reject) => {\r\n        writeTask(() => {\r\n            beforeTransition(opts);\r\n            runTransition(opts).then(result => {\r\n                if (result.animation) {\r\n                    result.animation.destroy();\r\n                }\r\n                afterTransition(opts);\r\n                resolve(result);\r\n            }, error => {\r\n                afterTransition(opts);\r\n                reject(error);\r\n            });\r\n        });\r\n    });\r\n};\r\nconst beforeTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    setZIndex(enteringEl, leavingEl, opts.direction);\r\n    if (opts.showGoBack) {\r\n        enteringEl.classList.add('can-go-back');\r\n    }\r\n    else {\r\n        enteringEl.classList.remove('can-go-back');\r\n    }\r\n    setPageHidden(enteringEl, false);\r\n    if (leavingEl) {\r\n        setPageHidden(leavingEl, false);\r\n    }\r\n};\r\nconst runTransition = async (opts) => {\r\n    const animationBuilder = await getAnimationBuilder(opts);\r\n    const ani = (animationBuilder)\r\n        ? animation(animationBuilder, opts)\r\n        : noAnimation(opts); // fast path for no animation\r\n    return ani;\r\n};\r\nconst afterTransition = (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    enteringEl.classList.remove('ion-page-invisible');\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.classList.remove('ion-page-invisible');\r\n    }\r\n};\r\nconst getAnimationBuilder = async (opts) => {\r\n    if (!opts.leavingEl || !opts.animated || opts.duration === 0) {\r\n        return undefined;\r\n    }\r\n    if (opts.animationBuilder) {\r\n        return opts.animationBuilder;\r\n    }\r\n    const getAnimation = (opts.mode === 'ios')\r\n        ? (await iosTransitionAnimation()).iosTransitionAnimation\r\n        : (await mdTransitionAnimation()).mdTransitionAnimation;\r\n    return getAnimation;\r\n};\r\nconst animation = async (animationBuilder, opts) => {\r\n    await waitForReady(opts, true);\r\n    let trans;\r\n    try {\r\n        const mod = await import('./index-69c37885.js');\r\n        trans = await mod.create(animationBuilder, opts.baseEl, opts);\r\n    }\r\n    catch (err) {\r\n        trans = animationBuilder(opts.baseEl, opts);\r\n    }\r\n    fireWillEvents(opts.enteringEl, opts.leavingEl);\r\n    const didComplete = await playTransition(trans, opts);\r\n    if (opts.progressCallback) {\r\n        opts.progressCallback(undefined);\r\n    }\r\n    if (didComplete) {\r\n        fireDidEvents(opts.enteringEl, opts.leavingEl);\r\n    }\r\n    return {\r\n        hasCompleted: didComplete,\r\n        animation: trans\r\n    };\r\n};\r\nconst noAnimation = async (opts) => {\r\n    const enteringEl = opts.enteringEl;\r\n    const leavingEl = opts.leavingEl;\r\n    await waitForReady(opts, false);\r\n    fireWillEvents(enteringEl, leavingEl);\r\n    fireDidEvents(enteringEl, leavingEl);\r\n    return {\r\n        hasCompleted: true\r\n    };\r\n};\r\nconst waitForReady = async (opts, defaultDeep) => {\r\n    const deep = opts.deepWait !== undefined ? opts.deepWait : defaultDeep;\r\n    const promises = deep ? [\r\n        deepReady(opts.enteringEl),\r\n        deepReady(opts.leavingEl),\r\n    ] : [\r\n        shallowReady(opts.enteringEl),\r\n        shallowReady(opts.leavingEl),\r\n    ];\r\n    await Promise.all(promises);\r\n    await notifyViewReady(opts.viewIsReady, opts.enteringEl);\r\n};\r\nconst notifyViewReady = async (viewIsReady, enteringEl) => {\r\n    if (viewIsReady) {\r\n        await viewIsReady(enteringEl);\r\n    }\r\n};\r\nconst playTransition = (trans, opts) => {\r\n    const progressCallback = opts.progressCallback;\r\n    // TODO: Remove AnimationBuilder\r\n    const promise = new Promise(resolve => {\r\n        trans.onFinish((currentStep) => {\r\n            if (typeof currentStep === 'number') {\r\n                resolve(currentStep === 1);\r\n            }\r\n            else if (trans.hasCompleted !== undefined) {\r\n                resolve(trans.hasCompleted);\r\n            }\r\n        });\r\n    });\r\n    // cool, let's do this, start the transition\r\n    if (progressCallback) {\r\n        // this is a swipe to go back, just get the transition progress ready\r\n        // kick off the swipe animation start\r\n        trans.progressStart(true);\r\n        progressCallback(trans);\r\n    }\r\n    else {\r\n        // only the top level transition should actually start \"play\"\r\n        // kick it off and let it play through\r\n        // ******** DOM WRITE ****************\r\n        trans.play();\r\n    }\r\n    // create a callback for when the animation is done\r\n    return promise;\r\n};\r\nconst fireWillEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(leavingEl, LIFECYCLE_WILL_LEAVE);\r\n    lifecycle(enteringEl, LIFECYCLE_WILL_ENTER);\r\n};\r\nconst fireDidEvents = (enteringEl, leavingEl) => {\r\n    lifecycle(enteringEl, LIFECYCLE_DID_ENTER);\r\n    lifecycle(leavingEl, LIFECYCLE_DID_LEAVE);\r\n};\r\nconst lifecycle = (el, eventName) => {\r\n    if (el) {\r\n        const ev = new CustomEvent(eventName, {\r\n            bubbles: false,\r\n            cancelable: false,\r\n        });\r\n        el.dispatchEvent(ev);\r\n    }\r\n};\r\nconst shallowReady = (el) => {\r\n    if (el && el.componentOnReady) {\r\n        return el.componentOnReady();\r\n    }\r\n    return Promise.resolve();\r\n};\r\nconst deepReady = async (el) => {\r\n    const element = el;\r\n    if (element) {\r\n        if (element.componentOnReady != null) {\r\n            const stencilEl = await element.componentOnReady();\r\n            if (stencilEl != null) {\r\n                return;\r\n            }\r\n        }\r\n        await Promise.all(Array.from(element.children).map(deepReady));\r\n    }\r\n};\r\nconst setPageHidden = (el, hidden) => {\r\n    if (hidden) {\r\n        el.setAttribute('aria-hidden', 'true');\r\n        el.classList.add('ion-page-hidden');\r\n    }\r\n    else {\r\n        el.hidden = false;\r\n        el.removeAttribute('aria-hidden');\r\n        el.classList.remove('ion-page-hidden');\r\n    }\r\n};\r\nconst setZIndex = (enteringEl, leavingEl, direction) => {\r\n    if (enteringEl !== undefined) {\r\n        enteringEl.style.zIndex = (direction === 'back')\r\n            ? '99'\r\n            : '101';\r\n    }\r\n    if (leavingEl !== undefined) {\r\n        leavingEl.style.zIndex = '100';\r\n    }\r\n};\r\nconst getIonPageElement = (element) => {\r\n    if (element.classList.contains('ion-page')) {\r\n        return element;\r\n    }\r\n    const ionPage = element.querySelector(':scope > .ion-page, :scope > ion-nav, :scope > ion-tabs');\r\n    if (ionPage) {\r\n        return ionPage;\r\n    }\r\n    // idk, return the original element so at least something animates and we don't have a null pointer\r\n    return element;\r\n};\n\nexport { deepReady as d, getIonPageElement as g, lifecycle as l, setPageHidden as s, transition as t };\n","const hostContext = (selector, el) => {\r\n    return el.closest(selector) !== null;\r\n};\r\n/**\r\n * Create the mode and color classes for the component based on the classes passed in\r\n */\r\nconst createColorClasses = (color) => {\r\n    return (typeof color === 'string' && color.length > 0) ? {\r\n        'ion-color': true,\r\n        [`ion-color-${color}`]: true\r\n    } : undefined;\r\n};\r\nconst getClassList = (classes) => {\r\n    if (classes !== undefined) {\r\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\r\n        return array\r\n            .filter(c => c != null)\r\n            .map(c => c.trim())\r\n            .filter(c => c !== '');\r\n    }\r\n    return [];\r\n};\r\nconst getClassMap = (classes) => {\r\n    const map = {};\r\n    getClassList(classes).forEach(c => map[c] = true);\r\n    return map;\r\n};\r\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\r\nconst openURL = async (url, ev, direction) => {\r\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\r\n        const router = document.querySelector('ion-router');\r\n        if (router) {\r\n            if (ev != null) {\r\n                ev.preventDefault();\r\n            }\r\n            return router.push(url, direction);\r\n        }\r\n    }\r\n    return false;\r\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","const watchForOptions = (containerEl, tagName, onChange) => {\r\n    const mutation = new MutationObserver(mutationList => {\r\n        onChange(getSelectedOption(mutationList, tagName));\r\n    });\r\n    mutation.observe(containerEl, {\r\n        childList: true,\r\n        subtree: true\r\n    });\r\n    return mutation;\r\n};\r\nconst getSelectedOption = (mutationList, tagName) => {\r\n    let newOption;\r\n    mutationList.forEach(mut => {\r\n        // tslint:disable-next-line: prefer-for-of\r\n        for (let i = 0; i < mut.addedNodes.length; i++) {\r\n            newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\r\n        }\r\n    });\r\n    return newOption;\r\n};\r\nconst findCheckedOption = (el, tagName) => {\r\n    if (el.nodeType !== 1) {\r\n        return undefined;\r\n    }\r\n    const options = (el.tagName === tagName.toUpperCase())\r\n        ? [el]\r\n        : Array.from(el.querySelectorAll(tagName));\r\n    return options.find((o) => o.checked === true);\r\n};\n\nexport { findCheckedOption as f, watchForOptions as w };\n","module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-title class=\\\"title-ios\\\" ion-text-capitalize>{{title}}</ion-title>\\n        <ion-buttons slot=\\\"end\\\">\\n            <ion-icon name=\\\"close\\\" slot=\\\"icon-only\\\" (click)=\\\"dismiss()\\\" class=\\\"white\\\" ion-margin></ion-icon>\\n        </ion-buttons>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-item lines=\\\"none\\\" class=\\\"card\\\" padding>\\n        <ion-col>\\n            <div ion-ion-margin-bottom *ngFor=\\\"let question of que; let i = index\\\">\\n                <ion-text>\\n                    <h5 class=\\\"que\\\" ion-no-ion-margin><strong>{{question}}</strong></h5>\\n                </ion-text>\\n                <ion-text>\\n                    <h5 class=\\\"ans\\\" ion-no-ion-margin>{{ans[i]}}</h5>\\n                </ion-text>\\n            </div>\\n        </ion-col>\\n    </ion-item>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZHVsZXMvaXNzdWUvaXNzdWUucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ModalController, NavParams } from '@ionic/angular';\n\n@Component({\n    selector: 'app-issue',\n    templateUrl: './issue.page.html',\n    styleUrls: ['./issue.page.scss'],\n})\n\nexport class IssuePage implements OnInit {\n    public questions;\n    public title;\n    public que = [];\n    public ans = [];\n    constructor(\n        private modalController: ModalController,\n        private params: NavParams\n    ) {\n\n        this.questions = params.get('value');\n        this.title = params.get('title');\n        for (const i of this.questions) {\n            this.que.push(Object.keys(i));\n            this.ans.push(Object.values(i));\n        }\n    }\n\n    ngOnInit() {\n    }\n\n    dismiss() {\n        this.modalController.dismiss();\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\nimport { UtilsService } from './utils.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AddressService {\n\n    addrRef: AngularFirestoreCollection;\n\n    constructor(\n        public Afs: AngularFirestore,\n        public utils: UtilsService\n        ) { }\n\n    // only add to local storage\n    public addUserAddress(userId, result, selected) {\n        const userAddresses = this.getUserAddress(userId);\n        if (result && result.fullAddress) {\n            userAddresses['items'].push(result);\n        }\n        userAddresses['selected'] = selected;\n        localStorage.setItem(userId + 'addresses', JSON.stringify(userAddresses));\n    }\n\n    public getUserAddress(userId) {\n        const defaultAddress = { items: [], selected: '' };\n        return JSON.parse(localStorage.getItem(userId + 'addresses')) || defaultAddress;\n    }\n\n    // public async getDeliveryAddress(address_id) {\n    //     this.addrRef = this.Afs.collection('address');\n    //     return this.addrRef.doc(address_id).snapshotChanges().pipe(\n    //         map((res: any) => {\n    //             const record = res.payload.data();\n    //             return record;\n    //         })\n    //     );\n    // }\n}\n","import { Injectable } from '@angular/core';\nimport * as firebase from 'firebase';\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\nimport { UtilsService } from './utils.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ChatService {\n\n    chatsRef: AngularFirestoreCollection<ChatMessages>;\n    chatContactsRef: AngularFirestoreCollection<ChatContacts>;\n\n    savedThreads = [];\n    savedUserChats: any;\n\n    constructor(\n        public Afs: AngularFirestore,\n        private utils: UtilsService\n    ) { }\n\n    public async getChatThreads(userId) {\n        this.chatsRef = this.Afs.collection('chatmessages',\n            ref => ref.where('users', 'array-contains', userId));\n        return this.chatsRef.snapshotChanges().pipe(\n            map(res => res.map((dataItems) => {\n                const data = dataItems.payload.doc.data(),\n                id = dataItems.payload.doc.id;\n                return { id, ...data };\n            }))\n        );\n    }\n\n    public async getChatMessages(threadId) {\n        this.chatsRef = this.Afs.collection('chatmessages');\n        return this.chatsRef.doc(threadId).snapshotChanges().pipe(\n            map((res: any) => {\n                if (res.payload.exists) {\n                    const result = res.payload.data();\n                    if (result) {\n                        result.id = res.payload.id;\n                        return result;\n                    }\n                } else {\n                    return res.payload.exists;\n                }\n            })\n        );\n    }\n\n    public getChatsFromStorage(userId) {\n        return JSON.parse(localStorage.getItem(userId + '-chats'));\n    }\n\n    public getChatThreadsFromStorage(userId) {\n        return JSON.parse(localStorage.getItem(userId + '-threads'));\n    }\n\n    public updateSavedThreads(userId, threadId) {\n        if (this.savedThreads) {\n            const index = this.savedThreads.indexOf(threadId);\n            if (index > -1) {\n                this.savedThreads.splice(index, 1);\n                this.savedThreads.unshift(threadId);\n            } else {\n                this.savedThreads.unshift(threadId);\n            }\n        } else {\n            this.savedThreads = [threadId];\n        }\n        localStorage.setItem(userId + '-threads', JSON.stringify(this.savedThreads));\n    }\n\n    public addServerChatToSavedChat(serverThread) {\n        if (!this.savedUserChats[serverThread.id]) {\n            this.savedUserChats[serverThread.id] = serverThread;\n        } else {\n            const savedThreadChats = this.savedUserChats[serverThread.id],\n            threadKeys = Object.keys(serverThread);\n            if (threadKeys && threadKeys.length > 0 &&\n                savedThreadChats.lastmessagetime !== serverThread.lastmessagetime) {\n                threadKeys.forEach(key => {\n                    if (key === 'messages' && serverThread[key].length > 0) {\n                        const serverMessages = this.getUniqueMessages(serverThread[key], savedThreadChats[key]);\n                        serverMessages.forEach(item => {\n                            if (item.datetime !== savedThreadChats[key][0].datetime) {\n                                savedThreadChats[key].push(item);\n                            }\n                        });\n                    } else {\n                        savedThreadChats[key] = serverThread[key];\n                    }\n                });\n            }\n            this.savedUserChats[serverThread.id] = savedThreadChats;\n        }\n\n        this.addContactToSavedChats(serverThread.id);\n        this.addChatsToStorage(this.utils.userInfo.id, this.savedUserChats);\n    }\n\n    getUniqueMessages(serverMessages, savedMessages) {\n        const sLen = serverMessages.length;\n        savedMessages = savedMessages.slice(0, sLen);\n\n        // Find values that are in serverMessages but not in savedMessages\n        const uniqueMessages = serverMessages.filter(obj1 => {\n            return !savedMessages.some(obj2 => {\n                return obj1.datetime === obj2.datetime;\n            });\n        });\n\n        return uniqueMessages;\n    }\n\n    addContactToSavedChats(threadId) {\n        const thread = this.savedUserChats[threadId];\n        if (!thread.contact) {\n            let contact = thread.sender;\n            if (thread.sender.id === this.utils.userInfo.id) {\n                contact = thread.recipient;\n            }\n            this.savedUserChats[threadId].contact = contact;\n\n            // removing users, sender, recipient, read, id ---\n            // because we dont need them\n            const deleteOptions = ['users', 'sender', 'recipient', 'id'];\n            deleteOptions.forEach(key => {\n                delete this.savedUserChats[threadId][key];\n            });\n        }\n    }\n\n    addChatsToStorage(userId, params) {\n        localStorage.setItem(userId + '-chats', JSON.stringify(params));\n    }\n\n    public async addNewChatRecord(threadId, params) {\n        this.chatsRef = this.Afs.collection('chatmessages');\n        // await this.utils.openLoader();\n        await this.chatsRef.doc(threadId).set(params);\n        // await this.utils.closeLoading();\n    }\n\n    public async addNewMessageToChatRecord(threadId, message) {\n        this.chatsRef = this.Afs.collection('chatmessages');\n        const read = [message.senderid];\n        await this.utils.openLoader();\n        await this.chatsRef.doc(threadId)\n            .update({ read, lastmessagetime: message.datetime, messages: firebase.firestore.FieldValue.arrayUnion(message) })\n            .then(snapshot => {\n                console.log(snapshot);\n            });\n        await this.utils.closeLoading();\n    }\n\n    public deleteRecord(threadId) {\n        this.chatsRef = this.Afs.collection('chatmessages');\n        this.chatsRef.doc(threadId).delete().then(() => {\n            console.log('Document successfully deleted!');\n        }).catch(error => {\n            // log it for admin purpose\n            console.error('Error removing document: ', error);\n        });\n    }\n\n    // Not Sure What this is for\n    // public async addChatPushMessage(record) {\n    //     this.addressCollectionRefrence = this.Afs.collection('chatnotificaions');\n    //     await this.addressCollectionRefrence.add(record);\n    // }\n\n    // public async addChatPushMessage(record) {\n    //     const xhr = new XMLHttpRequest();\n    //     xhr.addEventListener('readystatechange', function () {\n    //         if (this.readyState === 4) {\n    //             console.log(this.responseText);\n    //         }\n    //     });\n    //     xhr.open('POST', 'https://us-central1-bansik-7c7c4.cloudfunctions.net/function-1');\n    //     xhr.setRequestHeader('Content-Type', 'application/json');\n    //     xhr.send(JSON.stringify(record));\n    // }\n\n    // public async sendNotificaion(record) {\n    //     const xhr = new XMLHttpRequest();\n    //     xhr.addEventListener('readystatechange', function () {\n    //         if (this.readyState === 4) {\n    //             console.log(this.responseText);\n    //         }\n    //     });\n    //     xhr.open('POST', 'https://us-central1-bansik-7c7c4.cloudfunctions.net/function-1');\n    //     xhr.setRequestHeader('Content-Type', 'application/json');\n    //     xhr.send(JSON.stringify(record));\n    // }\n\n    public async loadChatContactDetails(chatcontactid) {\n        this.chatContactsRef = this.Afs.collection<ChatContacts>('chatcontacts');\n        return this.chatContactsRef.doc(chatcontactid).snapshotChanges().pipe(\n            map((res: any) => {\n                const result = res.payload.data() as ChatContacts;\n                result.id = res.payload.id;\n                return result;\n            })\n        );\n    }\n\n    public async checkChatContacts(userId, storeId) {\n        this.chatContactsRef = this.Afs.collection<ChatContacts>('chatcontacts',\n            ref => ref.where('customerid', '==', userId).where('sellerid', '==', storeId));\n        return this.chatContactsRef\n            .snapshotChanges().pipe(\n                map(res => res.map(dataItems => {\n                    const data: any = dataItems.payload.doc.data() as ChatContacts;\n                    const id = dataItems.payload.doc.id;\n                    return { ...data, chatcontactid: id };\n                }))\n            );\n    }\n\n    public async addChatContacts(record) {\n        this.chatContactsRef = this.Afs.collection('chatcontacts');\n        await this.chatContactsRef.add(record);\n    }\n\n    // public async checkChatContacts(userId, storeId) {\n    //     this.chatContactsRef = this.Afs.collection<ChatContacts>('chatcontacts',\n    //         ref => ref.where('customerid', '==', userId).where('sellerid', '==', storeId));\n    //     return this.chatContactsRef.snapshotChanges().pipe(\n    //         map(res => res.map(dataItems => {\n    //             const data: any = dataItems.payload.doc.data() as ChatContacts;\n    //             const id = dataItems.payload.doc.id;\n    //             return { ...data, chatcontactid: id };\n    //         }))\n    //     );\n    // }\n\n}\n\nexport interface ChatMessages {\n    chatcontactid: string;\n    senderid: string;\n    message: string;\n    messagetime: string;\n    readby: any;\n}\n\nexport interface ChatContacts {\n    sellerid: string;\n    sellerame: string;\n    sellerimage: string;\n    customerid: string;\n    customername: string;\n    customerimage: string;\n    lastmessage: string;\n    lastmessagetime: string;\n    chatcontactid: string;\n    id: any;\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\nimport { UtilsService } from './utils.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class OrderService {\n\n    ordersRef: AngularFirestoreCollection<Order>;\n    orderItemsRef: AngularFirestoreCollection<OrderItem>;\n\n    constructor(\n        public Afs: AngularFirestore,\n        public utils: UtilsService\n    ) { }\n\n    public async updateStatus(status, orderid) {\n        this.ordersRef = this.Afs.collection<Order>('orders');\n        await this.ordersRef.doc(orderid).update({ status });\n    }\n\n    public async getOrderItems(itemid) {\n        this.orderItemsRef = this.Afs.collection<OrderItem>('orderitems',\n            ref => ref.where('orderid', '==', itemid));\n        return this.orderItemsRef.snapshotChanges().pipe(\n            map(res => res.map(dataItems => {\n                const data: any = dataItems.payload.doc.data() as OrderItem,\n                    id = dataItems.payload.doc.id;\n                return { ...data, id };\n            }))\n        );\n    }\n\n    public async getOrder(orderid) {\n        this.ordersRef = this.Afs.collection<Order>('orders');\n        return this.ordersRef.doc(orderid).snapshotChanges().pipe(\n            map((res: any) => {\n                const record = res.payload.data() as Order;\n                return record;\n            })\n        );\n    }\n\n    public async addOrder(record) {\n        this.ordersRef = this.Afs.collection('orders');\n        return await this.ordersRef.add(record).then((doc) => {\n            return doc.id;\n        });\n    }\n\n    public async addOrderItem(record) {\n        this.orderItemsRef = this.Afs.collection('orderitems');\n        return await this.orderItemsRef.add(record);\n    }\n\n    public async getUserOrders(userId) {\n        this.ordersRef = this.Afs.collection<Order>('orders',\n            ref => ref.where('customerid', '==', userId).where('deliverystatus', '==', 'nd'));\n        return this.ordersRef.snapshotChanges().pipe(\n            map(res => res.map(dataItems => {\n                const data: any = dataItems.payload.doc.data() as Order;\n                const id = dataItems.payload.doc.id;\n                // this.UserOrders.push({ id, ...data });\n                return { id, ...data };\n            }))\n        );\n    }\n\n    public async getOrdersItem(itemid) {\n        this.orderItemsRef = this.Afs.collection<OrderItem>('orderitems',\n            ref => ref.where('orderid', '==', itemid));\n        return this.orderItemsRef.snapshotChanges().pipe(\n            map(res => res.map(dataItems => {\n                const data: any = dataItems.payload.doc.data() as OrderItem;\n                // const id = dataItems.payload.doc.id;\n                return { ...data };\n            }))\n        );\n    }\n\n    public async placeOrder(randomNumber, record) {\n        await this.utils.openLoader();\n        this.ordersRef = this.Afs.collection('orders');\n        await this.utils.openLoader();\n        await this.ordersRef.doc(randomNumber).set(record);\n        await this.utils.closeLoading();\n    }\n\n    public saveOrderToStorage(userId, record, isUpdateFromDbRequired) {\n        let allOrders = {\n            orders: []\n        };\n        const savedOrders = this.getSavedOrders(userId);\n        if (savedOrders && savedOrders.orders) {\n            allOrders = savedOrders;\n        }\n        allOrders['isUpdateRequired'] = isUpdateFromDbRequired;\n        allOrders.orders.unshift(record);\n        localStorage.setItem(userId + 'orders', JSON.stringify(allOrders));\n    }\n\n    public getSavedOrders(userId) {\n        return JSON.parse(localStorage.getItem(userId + 'orders'));\n    }\n\n    public saveAllOrdersToStorage(userId, allOrders) {\n        localStorage.setItem(userId + 'orders', JSON.stringify(allOrders));\n    }\n\n    // // Revisiting needed ----\n    // public async createUserOrder(grandTotal, addCart, promoCode, selectedDay, selectedTime, address) {\n    //     this.ordersRef = this.Afs.collection('Orders');\n    //     await this.utils.openLoader();\n    //     // if (Object.keys(promoCode).length) {\n    //     //     await this.ordersRef.add({ created: new Date(), total: grandTotal, products: addCart, promoCode, selectedDay, selectedTime, address, userid: this.utils.userInfo.id });\n    //     // } else {\n    //     //     await this.ordersRef.add({ created: new Date(), total: grandTotal, products: addCart, selectedDay, selectedTime, address, userid: this.utils.userInfo.id });\n    //     // }\n    //     await this.utils.closeLoading();\n    // }\n\n    // This is also in chat Service - i dont think we need in two places\n    // public async sendNotificaion(record) {\n    //     const xhr = new XMLHttpRequest();\n    //     xhr.addEventListener('readystatechange', function() {\n    //         if (this.readyState === 4) {\n    //             console.log(this.responseText);\n    //         }\n    //     });\n    //     xhr.open('POST', 'https://us-central1-bansik-7c7c4.cloudfunctions.net/function-1');\n    //     xhr.setRequestHeader('Content-Type', 'application/json');\n    //     xhr.send(JSON.stringify(record));\n    // }\n\n    // Vishal - when you take a look at this, wanted to know where is this used..\n    // public async getOders() {\n    //     this.orderCollectionReference = this.Afs.collection('Orders', ref => ref);\n    //     return this.orderCollectionReference.snapshotChanges().pipe(\n    //             map(res => res.map(dataItems => {\n    //                 const data = dataItems.payload.doc.data();\n    //                 const id = dataItems.payload.doc.id;\n    //                 const addressType = data.address.addresstype;\n    //                 const flatNumber = data.address.flatNumber;\n    //                 const locality = data.address.locality;\n    //                 const deliverdTo = data.address.title + ' ' + data.address.name;\n    //                 const street = data.address.street;\n    //                 let createdAtDate = '';\n    //                 if (data.created_at) {\n    //                     createdAtDate = data.created_at.toDate();\n    //                 }\n    //                 const productId = [];\n    //                 const productDetails = [];\n    //                 for (const row of data.products) {\n    //                     productId.push(row.id);\n    //                     productDetails.push(row.name + '=' + row.units);\n    //                 }\n    //                 if (data.promoCode) {\n    //                     const promo = data.promoCode.code;\n    //                     const promoOff = data.promoCode.discount;\n    //                     return { id, createdAtDate, productDetails, productId, promo, promoOff, addressType, street, flatNumber, locality, deliverdTo, ...data };\n    //                 } else {\n    //                     return { id, createdAtDate, productDetails, productId, addressType, street, flatNumber, locality, deliverdTo, ...data };\n    //                 }\n\n    //             }))\n    //         );\n    // }\n}\n\nexport interface Order {\n    storeid: string;\n    // storeid: string;\n    // customerid: string;\n    // customername: string;\n    // total: string;\n    // status: string; // vlaue will be New when added first\n    // transaction: any; // it is an array of object which contains these values { status , comment , time , username }\n    // delivery_mode: string; // it can be value from in three three option - deliver, pick_up , curve_site\n    // payment_mode: string;\n    // created: Date; // it can be value of it =  online , cash_on_dlivery , pay_at_store\n}\n\nexport interface OrderItem {\n    orderid: string;\n    itemid: string;\n    itenname: string;\n    itemimage: string;\n    quantity: number;\n    amount: number;\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from '@angular/fire/firestore';\nimport { map } from 'rxjs/operators';\nimport { UtilsService } from './utils.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class StoreService {\n\n    myStoreRef: AngularFirestoreCollection<Store>;\n\n    constructor(\n        public Afs: AngularFirestore,\n        public utils: UtilsService\n        ) { }\n\n    public async getStoreInfo(userId) {\n        if (userId) {\n            this.myStoreRef = this.Afs.collection<Store>('stores');\n            return this.myStoreRef.doc(userId).snapshotChanges().pipe(\n                map((res: any) => {\n                    const result = res.payload.data() as Store;\n                    if (result) {\n                        result.id = res.payload.id;\n                    }\n                    return result;\n                })\n            );\n        }\n    }\n\n    public async getUserLocalStores(city) {\n        this.myStoreRef = this.Afs.collection('stores', ref => ref.where('city', '==', city));\n        return this.myStoreRef.snapshotChanges().pipe(\n                map(res => res.map(dataItems => {\n                    const data: any = dataItems.payload.doc.data();\n                    const id = dataItems.payload.doc.id;\n                    // this.storesNearBy.push({ id, ...data });\n                    return { id, ...data };\n                }))\n            );\n    }\n\n    public async createStore(userId, result) {\n        this.myStoreRef = this.Afs.collection<Store>('stores');\n        await this.utils.openLoader();\n        await this.myStoreRef.doc(userId).set({ ...result }).then(snapshot => {\n            console.log(snapshot);\n        });\n        await this.utils.closeLoading();\n    }\n\n    public async updateStore(userId, result) {\n        this.myStoreRef = this.Afs.collection<Store>('stores');\n        await this.utils.openLoader();\n        await this.myStoreRef.doc(userId).update(result).then(snapshot => {\n            console.log(snapshot);\n        });\n        await this.utils.closeLoading();\n    }\n\n    // looking for distributors - for now bring everything up\n    // bring only if the user looking is not a distributor\n    public async getDistributors() {\n        this.myStoreRef = this.Afs.collection('stores', ref => ref.where('type', '==', 'd'));\n        return this.myStoreRef.snapshotChanges().pipe(\n            map(res => res.map(dataItems => {\n                const data: any = dataItems.payload.doc.data();\n                const id = dataItems.payload.doc.id;\n                // this.storesNearBy.push({ id, ...data });\n                return { id, ...data };\n            }))\n        );\n    }\n\n}\n\nexport interface Store {\n    id: any;\n    city: string;\n    iscredit: boolean;\n    iscurbsidepickup: boolean;\n    isdelivery: boolean;\n    ispayonpickup: boolean;\n    name: string;\n    state: string;\n    streetaddress: string;\n    zipcode: number;\n    categoriescount: number;\n    productscount: number;\n}\n\n"],"sourceRoot":"webpack:///"}